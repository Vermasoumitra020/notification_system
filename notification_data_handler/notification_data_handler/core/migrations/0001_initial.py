# Generated by Django 3.1.13 on 2021-08-23 15:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(help_text="The length of this field can't be longer than 100", max_length=100, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='name')),
                ('file', models.FileField(default=True, null=True, upload_to='', verbose_name='file')),
                ('description', models.TextField(blank=True, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PINCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(help_text="The number of char can't be  more than 50", max_length=50, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='PIN Code')),
            ],
            options={
                'verbose_name': 'Pin Code',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="The length of this field can't be longer than 100", max_length=100, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='Region Name')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(help_text="The length of this field can't be longer than 100", max_length=100, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='name')),
                ('region', models.CharField(blank=True, choices=[('E', 'East'), ('W', 'West'), ('N', 'North'), ('S', 'South'), ('C', 'Central')], max_length=255, null=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.country')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mobile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('mobile', models.CharField(blank=True, help_text='Enter a valid 10 digit mobile number.', max_length=10, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid Mobile Number', regex='^[1-9]\\d{9}$')], verbose_name='mobile number')),
                ('verified', models.BooleanField(default=False, verbose_name='verified')),
                ('country_code', models.CharField(blank=True, max_length=5, null=True, validators=[django.core.validators.RegexValidator(message='Invalid Country Code', regex='^\\+[0-9]{1,4}')], verbose_name='Country Code')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mobile_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(help_text="The length of this field can't be longer than 60", max_length=60, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='name')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.state')),
            ],
            options={
                'verbose_name': 'District',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('content', models.TextField(blank=True, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='content')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(help_text="The length of this field can't be longer than 60", max_length=60, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='name')),
                ('synonym', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='synonym name')),
                ('is_targeted_city', models.BooleanField(blank=True, default=False)),
                ('canonical_slug', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='Canonical Slug')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.state')),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('mobile', models.CharField(blank=True, help_text='Enter a valid 10 digit mobile number.', max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Invalid Mobile Number', regex='^[1-9]\\d{9}$')], verbose_name='mobile number')),
                ('country_code', models.CharField(blank=True, max_length=5, null=True, validators=[django.core.validators.RegexValidator(message='Invalid Country Code', regex='^\\+[0-9]{1,4}')], verbose_name='Country Code')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('lat', models.CharField(blank=True, max_length=20, null=True, verbose_name='latitude')),
                ('lng', models.CharField(blank=True, max_length=20, null=True, verbose_name='longitude')),
                ('house_no', models.TextField(blank=True, help_text="The length of this field can't be longer than 100", max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='Address Line 1')),
                ('street', models.TextField(blank=True, help_text="The length of this field can't be longer than 100", max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='Address Line 2')),
                ('locality', models.TextField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='Locality')),
                ('name', models.CharField(help_text="The length of this field can't be longer than 30", max_length=30, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='Branch Name')),
                ('branch_id', models.CharField(help_text="The length of this field can't be longer than 20", max_length=20, validators=[django.core.validators.RegexValidator(message='Only ASCII characters allowed', regex='^[\\x00-\\x7F]*$')], verbose_name='Branch ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('branch_head', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='branch_head', to=settings.AUTH_USER_MODEL)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.city')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.district')),
                ('pin_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.pincode')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='region_name', to='core.region')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
